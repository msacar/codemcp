diff --git a/codemcp/tools/grep.py b/codemcp/tools/grep.py
index 1234567..abcdefg 100644
--- a/codemcp/tools/grep.py
+++ b/codemcp/tools/grep.py
@@ -76,7 +76,7 @@ async def git_grep(
     # -l: list file names only
     # -i: case insensitive matching
     # -E: extended regexp for more complex patterns
-    args = ["git", "grep", "-li", pattern]
+    args = ["git", "grep", "-li", "-E", pattern]

     # Check if the path is a file
     is_file = (
diff --git a/codemcp/tools/smart_search.py b/codemcp/tools/smart_search.py
index 1234567..abcdefg 100644
--- a/codemcp/tools/smart_search.py
+++ b/codemcp/tools/smart_search.py
@@ -50,13 +50,13 @@ JS_TS_PATTERNS = {
 # Patterns for finding usages (not definitions)
 USAGE_PATTERNS = {
     "function_call": r"((?<!function\s){symbol}\s*\(|<{symbol})",  # Function calls and JSX components
     "new_instance": r"new\s+{symbol}",
     "property_access": r"\.{symbol}",
     "jsx_component": r"<{symbol}",  # JSX component usage
-    "import_named": r"import\s*\{{[^\}}]*{symbol}[^\}}]*\}}\s*from",  # Named imports only
+    "import_named": r"import\s*\{{[^}}]*{symbol}[^}}]*\}}\s*from",  # Named imports only
     "import_default": r"import\s+{symbol}\s+from",
     "require": r"require\s*\([^)]*{symbol}[^)]*\)",
-    "require_destructure": r"const\s*\{{[^\}}]*{symbol}[^\}}]*\}}\s*=\s*require",
+    "require_destructure": r"const\s*\{{[^}}]*{symbol}[^}}]*\}}\s*=\s*require",
     "type_usage": r":\s*{symbol}",
 }

@@ -355,11 +355,11 @@ async def find_imports(
     try:
         import_patterns = {
             "es6_named": r"import.*{symbol}.*from",
             "es6_default": r"import\s+{symbol}\s+from",
             "es6_namespace": r"import\s*\*\s*as\s+{symbol}\s+from",
             "require_const": r"const\s+{symbol}\s*=\s*require",
-            "require_destructure": r"const.*{symbol}.*=.*require",
+            "require_destructure": r"const\s*\{{[^}}]*{symbol}[^}}]*\}}\s*=\s*require",
             "dynamic_import": r"import.*{symbol}",
             "from_module": r"from.*{symbol}",
         }
